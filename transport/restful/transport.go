package restful

import (
	// "github.com/gin-contrib/gzip"
	"github.com/freelifer/gohelper/pkg/log"
	"github.com/freelifer/gohelper/transport/restful/v1"
	"github.com/gin-gonic/gin"
	"net/http"

	"github.com/swaggo/gin-swagger"
	"github.com/swaggo/gin-swagger/swaggerFiles"

	_ "github.com/freelifer/gohelper/docs" // docs is generated by Swag CLI, you have to import it.
)

func Run() {
	r := gin.Default()
	// r.Use(gzip.Gzip(gzip.BestCompression))
	// use ginSwagger middleware to
	r.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))

	g1 := r.Group("/v1")
	{
		// user
		g1.POST("/tokens", v1.Login)
		g1.POST("/register", v1.Register)

		// project
		// g1.POST("/projects", postProject)
		// g1.GET("/projects", getProjects)
		// g1.GET("/projects/:id", getProject)
		// g1.PUT("/projects/:id", updateProject)
		// g1.DELETE("/projects/:id", delectProject)

	}
	r.Run(":80") // listen and serve on 0.0.0.0:8080
}

var jsonContentType = "application/json; charset=utf-8"

// jsoniter
// for json Marshal once, return and cache
func JSON(c *gin.Context, code int, data []byte) {
	c.Data(code, jsonContentType, data)
}

func Error(c *gin.Context, no int, mark string) {
	c.JSON(http.StatusOK, gin.H{
		"errno":   no,
		"request": mark,
	})
}

func Success1(c *gin.Context, data []byte) {
	JSON(c, http.StatusOK, data)
}

func Success(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{
		"errno": 0,
	})
}

func CreateMark() string {
	return log.CreateMark()
}
